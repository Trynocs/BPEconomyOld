plugins {
    id 'com.gradleup.shadow' version '8.3.0'
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'com.trynocs'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    // LuckPerms repository
    maven {
        name = "luckperms"
        url = "https://repo.lucko.me/"
    }
    // ACF (Aikar Commands Framework)
    maven {
        name = "aikar"
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
    // PaperMC repository
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    // JitPack for TryLibs
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT")

<<<<<<< HEAD
    // LuckPerms API
    compileOnly("net.luckperms:api:5.4")

    // Vault API
    compileOnly("com.github.MilkBowl:VaultAPI:1.7")

    // Aikar's Command Framework
    implementation("co.aikar:acf-paper:0.5.1-SNAPSHOT")

    // TryLibs dependency from JitPack with specific commit
    compileOnly("com.trynocs:TryLibs:1.0")
}

shadowJar {
    relocate 'co.aikar.commands', 'com.trynocs.bPEconomy.acf'
    relocate 'co.aikar.locales', 'com.trynocs.bPEconomy.locales'
=======
    // Test dependencies
    testImplementation(platform("org.junit:junit-bom:5.10.0"))
    testImplementation("org.junit.jupiter:junit-jupiter")
>>>>>>> origin/feature/initial-economy-and-jobs
}

tasks {
    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

build.dependsOn shadowJar